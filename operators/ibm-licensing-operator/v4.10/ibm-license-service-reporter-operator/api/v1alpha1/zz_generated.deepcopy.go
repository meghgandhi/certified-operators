//go:build !ignore_autogenerated

//
// Copyright 2023 IBM Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	routev1 "github.com/openshift/api/route/v1"
	corev1 "k8s.io/api/core/v1"
	"k8s.io/api/networking/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Authentication) DeepCopyInto(out *Authentication) {
	*out = *in
	out.Useradmin = in.Useradmin
	in.OAuth.DeepCopyInto(&out.OAuth)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Authentication.
func (in *Authentication) DeepCopy() *Authentication {
	if in == nil {
		return nil
	}
	out := new(Authentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Container) DeepCopyInto(out *Container) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Container.
func (in *Container) DeepCopy() *Container {
	if in == nil {
		return nil
	}
	out := new(Container)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IBMLicenseServiceReporter) DeepCopyInto(out *IBMLicenseServiceReporter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IBMLicenseServiceReporter.
func (in *IBMLicenseServiceReporter) DeepCopy() *IBMLicenseServiceReporter {
	if in == nil {
		return nil
	}
	out := new(IBMLicenseServiceReporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IBMLicenseServiceReporter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IBMLicenseServiceReporterIngressCommonOptions) DeepCopyInto(out *IBMLicenseServiceReporterIngressCommonOptions) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.IngressClassName != nil {
		in, out := &in.IngressClassName, &out.IngressClassName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IBMLicenseServiceReporterIngressCommonOptions.
func (in *IBMLicenseServiceReporterIngressCommonOptions) DeepCopy() *IBMLicenseServiceReporterIngressCommonOptions {
	if in == nil {
		return nil
	}
	out := new(IBMLicenseServiceReporterIngressCommonOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IBMLicenseServiceReporterIngressOptions) DeepCopyInto(out *IBMLicenseServiceReporterIngressOptions) {
	*out = *in
	if in.CommonOptions != nil {
		in, out := &in.CommonOptions, &out.CommonOptions
		*out = new(IBMLicenseServiceReporterIngressCommonOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ApiOptions != nil {
		in, out := &in.ApiOptions, &out.ApiOptions
		*out = new(IBMLicenseServiceReporterIngressSpecificOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ConsoleOptions != nil {
		in, out := &in.ConsoleOptions, &out.ConsoleOptions
		*out = new(IBMLicenseServiceReporterIngressSpecificOptions)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IBMLicenseServiceReporterIngressOptions.
func (in *IBMLicenseServiceReporterIngressOptions) DeepCopy() *IBMLicenseServiceReporterIngressOptions {
	if in == nil {
		return nil
	}
	out := new(IBMLicenseServiceReporterIngressOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IBMLicenseServiceReporterIngressSpecificOptions) DeepCopyInto(out *IBMLicenseServiceReporterIngressSpecificOptions) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = make([]v1.IngressTLS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IBMLicenseServiceReporterIngressSpecificOptions.
func (in *IBMLicenseServiceReporterIngressSpecificOptions) DeepCopy() *IBMLicenseServiceReporterIngressSpecificOptions {
	if in == nil {
		return nil
	}
	out := new(IBMLicenseServiceReporterIngressSpecificOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IBMLicenseServiceReporterList) DeepCopyInto(out *IBMLicenseServiceReporterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IBMLicenseServiceReporter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IBMLicenseServiceReporterList.
func (in *IBMLicenseServiceReporterList) DeepCopy() *IBMLicenseServiceReporterList {
	if in == nil {
		return nil
	}
	out := new(IBMLicenseServiceReporterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IBMLicenseServiceReporterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IBMLicenseServiceReporterSpec) DeepCopyInto(out *IBMLicenseServiceReporterSpec) {
	*out = *in
	if in.EnvVariable != nil {
		in, out := &in.EnvVariable, &out.EnvVariable
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.ReceiverContainer.DeepCopyInto(&out.ReceiverContainer)
	in.ReporterUIContainer.DeepCopyInto(&out.ReporterUIContainer)
	in.DatabaseContainer.DeepCopyInto(&out.DatabaseContainer)
	in.AuthContainer.DeepCopyInto(&out.AuthContainer)
	in.Authentication.DeepCopyInto(&out.Authentication)
	if in.License != nil {
		in, out := &in.License, &out.License
		*out = new(License)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RouteEnabled != nil {
		in, out := &in.RouteEnabled, &out.RouteEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RouteOptions != nil {
		in, out := &in.RouteOptions, &out.RouteOptions
		*out = new(IBMLicenseServiceRouteOptions)
		(*in).DeepCopyInto(*out)
	}
	out.Capacity = in.Capacity.DeepCopy()
	if in.WorkloadsCustomColumnsRetencyDays != nil {
		in, out := &in.WorkloadsCustomColumnsRetencyDays, &out.WorkloadsCustomColumnsRetencyDays
		*out = new(int)
		**out = **in
	}
	if in.IngressOptions != nil {
		in, out := &in.IngressOptions, &out.IngressOptions
		*out = new(IBMLicenseServiceReporterIngressOptions)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IBMLicenseServiceReporterSpec.
func (in *IBMLicenseServiceReporterSpec) DeepCopy() *IBMLicenseServiceReporterSpec {
	if in == nil {
		return nil
	}
	out := new(IBMLicenseServiceReporterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IBMLicenseServiceReporterStatus) DeepCopyInto(out *IBMLicenseServiceReporterStatus) {
	*out = *in
	if in.LicenseServiceReporterPods != nil {
		in, out := &in.LicenseServiceReporterPods, &out.LicenseServiceReporterPods
		*out = make([]corev1.PodStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LicensingReporterPods != nil {
		in, out := &in.LicensingReporterPods, &out.LicensingReporterPods
		*out = make([]corev1.PodStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IBMLicenseServiceReporterStatus.
func (in *IBMLicenseServiceReporterStatus) DeepCopy() *IBMLicenseServiceReporterStatus {
	if in == nil {
		return nil
	}
	out := new(IBMLicenseServiceReporterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IBMLicenseServiceRouteOptions) DeepCopyInto(out *IBMLicenseServiceRouteOptions) {
	*out = *in
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(routev1.TLSConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IBMLicenseServiceRouteOptions.
func (in *IBMLicenseServiceRouteOptions) DeepCopy() *IBMLicenseServiceRouteOptions {
	if in == nil {
		return nil
	}
	out := new(IBMLicenseServiceRouteOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *License) DeepCopyInto(out *License) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new License.
func (in *License) DeepCopy() *License {
	if in == nil {
		return nil
	}
	out := new(License)
	in.DeepCopyInto(out)
	return out
}
